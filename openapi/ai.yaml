openapi: 3.0.3
info:
  title: Insforge AI API
  version: 1.0.0
  description: AI services for chat and image generation with multiple provider support

paths:
  /api/ai/chat/models:
    get:
      summary: Get available chat models
      description: Returns list of all available chat models from configured providers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available chat models
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  models:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChatModelConfig'
        '401':
          description: Unauthorized
        '500':
          description: Failed to get models list

  /api/ai/chat:
    post:
      summary: Send chat message
      description: Send a chat message to any supported model with optional streaming
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Chat response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  response:
                    type: string
                    description: AI model response
                  model:
                    type: string
                    description: Model used for generation
            text/event-stream:
              schema:
                type: string
                description: Server-sent events stream for streaming responses
        '400':
          description: Invalid request - missing model or message
        '401':
          description: Unauthorized
        '500':
          description: Failed to get response

  /api/ai/image/models:
    get:
      summary: Get available image generation models
      description: Returns list of all available image generation models from configured providers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available image models
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: array
                    items:
                      $ref: '#/components/schemas/ImageModelConfig'
                  totalCount:
                    type: integer
                    description: Total number of available models
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /api/ai/image/generation:
    post:
      summary: Image Generation
      description: Generate images using specified model and options
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageGenerationOptions'
      responses:
        '201':
          description: Images generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    type: string
                    description: Model used for generation
                  images:
                    type: array
                    items:
                      $ref: '#/components/schemas/GeneratedImage'
                  count:
                    type: integer
                    description: Number of images generated
                  nextActions:
                    type: string
                    example: Images have been generated successfully. Use the returned URLs to access them.
        '400':
          description: Invalid request - missing model or prompt
        '401':
          description: Unauthorized
        '500':
          description: Failed to generate image

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: x-api-key

  schemas:
    ChatMessage:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant, system]
          description: Role of the message sender
        content:
          type: string
          description: Message content

    ChatOptions:
      type: object
      properties:
        model:
          type: string
          description: Model identifier
        temperature:
          type: number
          minimum: 0
          maximum: 2
          description: Controls randomness in generation (0-2)
        maxTokens:
          type: integer
          description: Maximum number of tokens to generate
        topP:
          type: number
          minimum: 0
          maximum: 1
          description: Nucleus sampling parameter
        systemPrompt:
          type: string
          description: System prompt to guide model behavior

    ChatRequest:
      type: object
      required:
        - model
      properties:
        model:
          type: string
          description: Model identifier (e.g., "gpt-4", "claude-3-opus-20240229")
          example: gpt-4
        message:
          type: string
          description: Single message for simple chat
          example: "What is the capital of France?"
        messages:
          type: array
          description: Array of messages for multi-turn conversation
          items:
            $ref: '#/components/schemas/ChatMessage'
        stream:
          type: boolean
          default: false
          description: Enable streaming response via Server-Sent Events
        temperature:
          type: number
          minimum: 0
          maximum: 2
          description: Controls randomness in generation
        maxTokens:
          type: integer
          description: Maximum number of tokens to generate
        topP:
          type: number
          minimum: 0
          maximum: 1
          description: Nucleus sampling parameter
        systemPrompt:
          type: string
          description: System prompt to guide model behavior

    ChatProvider:
      type: string
      enum: [openai, anthropic, google, bedrock, xai]
      description: Chat model provider

    ChatModelConfig:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ChatProvider'
        modelId:
          type: string
          description: Provider-specific model identifier
        displayName:
          type: string
          description: User-friendly model name

    ImageGenerationOptions:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
          description: Model identifier (e.g., "dall-e-3", "stable-diffusion-xl")
          example: dall-e-3
        prompt:
          type: string
          description: Text prompt describing the desired image
          example: "A serene landscape with mountains and a lake at sunset"
        negativePrompt:
          type: string
          description: Text describing what to avoid in the image (for models that support it)
        width:
          type: integer
          description: Image width in pixels
          example: 1024
        height:
          type: integer
          description: Image height in pixels
          example: 1024
        numImages:
          type: integer
          minimum: 1
          maximum: 10
          default: 1
          description: Number of images to generate
        quality:
          type: string
          enum: [standard, hd]
          default: standard
          description: Image quality (OpenAI models)
        style:
          type: string
          enum: [vivid, natural]
          default: vivid
          description: Image style (OpenAI models)
        responseFormat:
          type: string
          enum: [url, b64_json]
          default: url
          description: Format of the generated image response
        size:
          type: string
          description: Image size in format like "1024x1024" (OpenAI format)
          example: "1024x1024"
        steps:
          type: integer
          minimum: 1
          maximum: 150
          description: Number of diffusion steps (for diffusion models)
        guidanceScale:
          type: number
          minimum: 0
          maximum: 20
          description: Guidance scale for diffusion models
        seed:
          type: integer
          description: Seed for reproducible generation

    GeneratedImage:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL of the generated image
        b64_json:
          type: string
          description: Base64 encoded image data
        revised_prompt:
          type: string
          description: Revised prompt used by the model (if available)

    ImageProvider:
      type: string
      enum: [openai, xai, bedrock, google]
      description: Image generation provider

    ImageModelConfig:
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/ImageProvider'
        modelId:
          type: string
          description: Provider-specific model identifier
        displayName:
          type: string
          description: User-friendly model name
        supportedSizes:
          type: array
          items:
            type: string
          description: List of supported image sizes
        defaultSize:
          type: string
          description: Default image size for this model

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
        details:
          type: string
          description: Additional error details
        code:
          type: string
          description: Error code for programmatic handling